{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Simple Inventory API",
    "description" : "This is a simple API",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/OrelRevach/SuperLeagueAPI/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/users/{id}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get a user by {id}.",
        "operationId" : "getUserById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User was created.",
            "content" : {
              "application-json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/users"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found by id.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "this is the register",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/users"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User been created Successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Response description."
          }
        }
      },
      "users" : {
        "type" : "object",
        "properties" : {
          "UserName" : {
            "maxLength" : 8,
            "minLength" : 5,
            "type" : "string",
            "description" : "the name of the user"
          },
          "password" : {
            "maxLength" : 14,
            "minLength" : 6,
            "type" : "string"
          }
        }
      }
    }
  }
}